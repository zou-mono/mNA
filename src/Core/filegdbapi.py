# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _filegdbapi
else:
    import _filegdbapi

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _filegdbapi.delete_SwigPyIterator

    def value(self):
        return _filegdbapi.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _filegdbapi.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _filegdbapi.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _filegdbapi.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _filegdbapi.SwigPyIterator_equal(self, x)

    def copy(self):
        return _filegdbapi.SwigPyIterator_copy(self)

    def next(self):
        return _filegdbapi.SwigPyIterator_next(self)

    def __next__(self):
        return _filegdbapi.SwigPyIterator___next__(self)

    def previous(self):
        return _filegdbapi.SwigPyIterator_previous(self)

    def advance(self, n):
        return _filegdbapi.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _filegdbapi.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _filegdbapi.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _filegdbapi.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _filegdbapi.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _filegdbapi.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _filegdbapi.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _filegdbapi:
_filegdbapi.SwigPyIterator_swigregister(SwigPyIterator)

fieldTypeSmallInteger = _filegdbapi.fieldTypeSmallInteger
fieldTypeInteger = _filegdbapi.fieldTypeInteger
fieldTypeSingle = _filegdbapi.fieldTypeSingle
fieldTypeDouble = _filegdbapi.fieldTypeDouble
fieldTypeString = _filegdbapi.fieldTypeString
fieldTypeDate = _filegdbapi.fieldTypeDate
fieldTypeOID = _filegdbapi.fieldTypeOID
fieldTypeGeometry = _filegdbapi.fieldTypeGeometry
fieldTypeBlob = _filegdbapi.fieldTypeBlob
fieldTypeRaster = _filegdbapi.fieldTypeRaster
fieldTypeGUID = _filegdbapi.fieldTypeGUID
fieldTypeGlobalID = _filegdbapi.fieldTypeGlobalID
fieldTypeXML = _filegdbapi.fieldTypeXML
shapeNull = _filegdbapi.shapeNull
shapePoint = _filegdbapi.shapePoint
shapePointM = _filegdbapi.shapePointM
shapePointZM = _filegdbapi.shapePointZM
shapePointZ = _filegdbapi.shapePointZ
shapeMultipoint = _filegdbapi.shapeMultipoint
shapeMultipointM = _filegdbapi.shapeMultipointM
shapeMultipointZM = _filegdbapi.shapeMultipointZM
shapeMultipointZ = _filegdbapi.shapeMultipointZ
shapePolyline = _filegdbapi.shapePolyline
shapePolylineM = _filegdbapi.shapePolylineM
shapePolylineZM = _filegdbapi.shapePolylineZM
shapePolylineZ = _filegdbapi.shapePolylineZ
shapePolygon = _filegdbapi.shapePolygon
shapePolygonM = _filegdbapi.shapePolygonM
shapePolygonZM = _filegdbapi.shapePolygonZM
shapePolygonZ = _filegdbapi.shapePolygonZ
shapeMultiPatchM = _filegdbapi.shapeMultiPatchM
shapeMultiPatch = _filegdbapi.shapeMultiPatch
shapeGeneralPolyline = _filegdbapi.shapeGeneralPolyline
shapeGeneralPolygon = _filegdbapi.shapeGeneralPolygon
shapeGeneralPoint = _filegdbapi.shapeGeneralPoint
shapeGeneralMultipoint = _filegdbapi.shapeGeneralMultipoint
shapeGeneralMultiPatch = _filegdbapi.shapeGeneralMultiPatch
shapeHasZs = _filegdbapi.shapeHasZs
shapeHasMs = _filegdbapi.shapeHasMs
shapeHasCurves = _filegdbapi.shapeHasCurves
shapeHasIDs = _filegdbapi.shapeHasIDs
shapeHasNormals = _filegdbapi.shapeHasNormals
shapeHasTextures = _filegdbapi.shapeHasTextures
shapeHasPartIDs = _filegdbapi.shapeHasPartIDs
shapeHasMaterials = _filegdbapi.shapeHasMaterials
shapeIsCompressed = _filegdbapi.shapeIsCompressed
shapeModifierMask = _filegdbapi.shapeModifierMask
shapeMultiPatchModifierMask = _filegdbapi.shapeMultiPatchModifierMask
shapeBasicTypeMask = _filegdbapi.shapeBasicTypeMask
shapeBasicModifierMask = _filegdbapi.shapeBasicModifierMask
shapeNonBasicModifierMask = _filegdbapi.shapeNonBasicModifierMask
shapeExtendedModifierMask = _filegdbapi.shapeExtendedModifierMask
geometryNull = _filegdbapi.geometryNull
geometryPoint = _filegdbapi.geometryPoint
geometryMultipoint = _filegdbapi.geometryMultipoint
geometryPolyline = _filegdbapi.geometryPolyline
geometryPolygon = _filegdbapi.geometryPolygon
geometryMultiPatch = _filegdbapi.geometryMultiPatch
curveTypeCircularArc = _filegdbapi.curveTypeCircularArc
curveTypeBezier = _filegdbapi.curveTypeBezier
curveTypeEllipticArc = _filegdbapi.curveTypeEllipticArc
class Geodatabase(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def GetDatasetTypes(self, datasetTypes):
        return _filegdbapi.Geodatabase_GetDatasetTypes(self, datasetTypes)

    def GetDatasetRelationshipTypes(self, relationshipTypes):
        return _filegdbapi.Geodatabase_GetDatasetRelationshipTypes(self, relationshipTypes)

    def GetChildDatasets(self, parentPath, datasetType, childDatasets):
        return _filegdbapi.Geodatabase_GetChildDatasets(self, parentPath, datasetType, childDatasets)

    def GetRelatedDatasets(self, path, relType, datasetType, relatedDatasets):
        return _filegdbapi.Geodatabase_GetRelatedDatasets(self, path, relType, datasetType, relatedDatasets)

    def GetDatasetDefinition(self, path, datasetType, datasetDef):
        return _filegdbapi.Geodatabase_GetDatasetDefinition(self, path, datasetType, datasetDef)

    def GetChildDatasetDefinitions(self, parentPath, datasetType, childDatasetDefs):
        return _filegdbapi.Geodatabase_GetChildDatasetDefinitions(self, parentPath, datasetType, childDatasetDefs)

    def GetRelatedDatasetDefinitions(self, path, relType, datasetType, relatedDatasetDefs):
        return _filegdbapi.Geodatabase_GetRelatedDatasetDefinitions(self, path, relType, datasetType, relatedDatasetDefs)

    def GetDatasetDocumentation(self, path, datasetType, documentation):
        return _filegdbapi.Geodatabase_GetDatasetDocumentation(self, path, datasetType, documentation)

    def CreateFeatureDataset(self, *args):
        return _filegdbapi.Geodatabase_CreateFeatureDataset(self, *args)

    def CreateTable(self, *args):
        return _filegdbapi.Geodatabase_CreateTable(self, *args)

    def OpenTable(self, path, table):
        return _filegdbapi.Geodatabase_OpenTable(self, path, table)

    def CloseTable(self, table):
        return _filegdbapi.Geodatabase_CloseTable(self, table)

    def Rename(self, path, datasetType, newName):
        return _filegdbapi.Geodatabase_Rename(self, path, datasetType, newName)

    def Move(self, path, newParentPath):
        return _filegdbapi.Geodatabase_Move(self, path, newParentPath)

    def Delete(self, path, datasetType):
        return _filegdbapi.Geodatabase_Delete(self, path, datasetType)

    def CompactDatabase(self):
        return _filegdbapi.Geodatabase_CompactDatabase(self)

    def GetDomains(self, domainNames):
        return _filegdbapi.Geodatabase_GetDomains(self, domainNames)

    def CreateDomain(self, domainDef):
        return _filegdbapi.Geodatabase_CreateDomain(self, domainDef)

    def AlterDomain(self, domainDef):
        return _filegdbapi.Geodatabase_AlterDomain(self, domainDef)

    def DeleteDomain(self, domainName):
        return _filegdbapi.Geodatabase_DeleteDomain(self, domainName)

    def GetDomainDefinition(self, domainName, domainDef):
        return _filegdbapi.Geodatabase_GetDomainDefinition(self, domainName, domainDef)

    def GetQueryName(self, path, queryName):
        return _filegdbapi.Geodatabase_GetQueryName(self, path, queryName)

    def ExecuteSQL(self, sqlStmt, recycling, rows):
        return _filegdbapi.Geodatabase_ExecuteSQL(self, sqlStmt, recycling, rows)

    def __init__(self):
        _filegdbapi.Geodatabase_swiginit(self, _filegdbapi.new_Geodatabase())
    __swig_destroy__ = _filegdbapi.delete_Geodatabase

# Register Geodatabase in _filegdbapi:
_filegdbapi.Geodatabase_swigregister(Geodatabase)


def CreateGeodatabase(path, geodatabase):
    return _filegdbapi.CreateGeodatabase(path, geodatabase)

def OpenGeodatabase(path, geodatabase):
    return _filegdbapi.OpenGeodatabase(path, geodatabase)

def CloseGeodatabase(geodatabase):
    return _filegdbapi.CloseGeodatabase(geodatabase)

def DeleteGeodatabase(path):
    return _filegdbapi.DeleteGeodatabase(path)
class Table(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def GetDefinition(self, tableDef):
        return _filegdbapi.Table_GetDefinition(self, tableDef)

    def GetDocumentation(self, documentation):
        return _filegdbapi.Table_GetDocumentation(self, documentation)

    def SetDocumentation(self, documentation):
        return _filegdbapi.Table_SetDocumentation(self, documentation)

    def GetFieldInformation(self, fieldInfo):
        return _filegdbapi.Table_GetFieldInformation(self, fieldInfo)

    def GetFields(self, fieldDefs):
        return _filegdbapi.Table_GetFields(self, fieldDefs)

    def AddField(self, *args):
        return _filegdbapi.Table_AddField(self, *args)

    def AlterField(self, fieldDef):
        return _filegdbapi.Table_AlterField(self, fieldDef)

    def DeleteField(self, fieldName):
        return _filegdbapi.Table_DeleteField(self, fieldName)

    def GetIndexes(self, *args):
        return _filegdbapi.Table_GetIndexes(self, *args)

    def AddIndex(self, *args):
        return _filegdbapi.Table_AddIndex(self, *args)

    def DeleteIndex(self, indexName):
        return _filegdbapi.Table_DeleteIndex(self, indexName)

    def CreateSubtype(self, subtypeDef):
        return _filegdbapi.Table_CreateSubtype(self, subtypeDef)

    def AlterSubtype(self, subtypeDef):
        return _filegdbapi.Table_AlterSubtype(self, subtypeDef)

    def DeleteSubtype(self, subtypeName):
        return _filegdbapi.Table_DeleteSubtype(self, subtypeName)

    def EnableSubtypes(self, subtypeFieldName, subtypeDef):
        return _filegdbapi.Table_EnableSubtypes(self, subtypeFieldName, subtypeDef)

    def GetDefaultSubtypeCode(self, defaultCode):
        return _filegdbapi.Table_GetDefaultSubtypeCode(self, defaultCode)

    def SetDefaultSubtypeCode(self, defaultCode):
        return _filegdbapi.Table_SetDefaultSubtypeCode(self, defaultCode)

    def DisableSubtypes(self):
        return _filegdbapi.Table_DisableSubtypes(self)

    def Search(self, *args):
        return _filegdbapi.Table_Search(self, *args)

    def CreateRowObject(self, row):
        return _filegdbapi.Table_CreateRowObject(self, row)

    def Insert(self, row):
        return _filegdbapi.Table_Insert(self, row)

    def Update(self, row):
        return _filegdbapi.Table_Update(self, row)

    def Delete(self, row):
        return _filegdbapi.Table_Delete(self, row)

    def IsEditable(self, isEditable):
        return _filegdbapi.Table_IsEditable(self, isEditable)

    def GetRowCount(self, rowCount):
        return _filegdbapi.Table_GetRowCount(self, rowCount)

    def GetExtent(self, extent):
        return _filegdbapi.Table_GetExtent(self, extent)

    def SetWriteLock(self):
        return _filegdbapi.Table_SetWriteLock(self)

    def FreeWriteLock(self):
        return _filegdbapi.Table_FreeWriteLock(self)

    def LoadOnlyMode(self, loadOnlyMode):
        return _filegdbapi.Table_LoadOnlyMode(self, loadOnlyMode)

    def __init__(self):
        _filegdbapi.Table_swiginit(self, _filegdbapi.new_Table())
    __swig_destroy__ = _filegdbapi.delete_Table

# Register Table in _filegdbapi:
_filegdbapi.Table_swigregister(Table)

class Row(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def IsNull(self, *args):
        return _filegdbapi.Row_IsNull(self, *args)

    def SetNull(self, *args):
        return _filegdbapi.Row_SetNull(self, *args)

    def GetOID(self, objectID):
        return _filegdbapi.Row_GetOID(self, objectID)

    def GetGlobalID(self, globalID):
        return _filegdbapi.Row_GetGlobalID(self, globalID)

    def GetGeometry(self, shapeBuffer):
        return _filegdbapi.Row_GetGeometry(self, shapeBuffer)

    def SetGeometry(self, shapeBuffer):
        return _filegdbapi.Row_SetGeometry(self, shapeBuffer)

    def GetShort(self, *args):
        return _filegdbapi.Row_GetShort(self, *args)

    def SetShort(self, *args):
        return _filegdbapi.Row_SetShort(self, *args)

    def GetInteger(self, *args):
        return _filegdbapi.Row_GetInteger(self, *args)

    def SetInteger(self, *args):
        return _filegdbapi.Row_SetInteger(self, *args)

    def GetFloat(self, *args):
        return _filegdbapi.Row_GetFloat(self, *args)

    def SetFloat(self, *args):
        return _filegdbapi.Row_SetFloat(self, *args)

    def GetDouble(self, *args):
        return _filegdbapi.Row_GetDouble(self, *args)

    def SetDouble(self, *args):
        return _filegdbapi.Row_SetDouble(self, *args)

    def GetDate(self, *args):
        return _filegdbapi.Row_GetDate(self, *args)

    def SetDate(self, *args):
        return _filegdbapi.Row_SetDate(self, *args)

    def GetString(self, *args):
        return _filegdbapi.Row_GetString(self, *args)

    def SetString(self, *args):
        return _filegdbapi.Row_SetString(self, *args)

    def GetGUID(self, *args):
        return _filegdbapi.Row_GetGUID(self, *args)

    def SetGUID(self, *args):
        return _filegdbapi.Row_SetGUID(self, *args)

    def GetXML(self, *args):
        return _filegdbapi.Row_GetXML(self, *args)

    def SetXML(self, *args):
        return _filegdbapi.Row_SetXML(self, *args)

    def GetRaster(self, field, raster):
        return _filegdbapi.Row_GetRaster(self, field, raster)

    def SetRaster(self, field, raster):
        return _filegdbapi.Row_SetRaster(self, field, raster)

    def GetBinary(self, *args):
        return _filegdbapi.Row_GetBinary(self, *args)

    def SetBinary(self, *args):
        return _filegdbapi.Row_SetBinary(self, *args)

    def GetFieldInformation(self, fieldInfo):
        return _filegdbapi.Row_GetFieldInformation(self, fieldInfo)

    def GetFields(self, fieldDefs):
        return _filegdbapi.Row_GetFields(self, fieldDefs)

    def __init__(self):
        _filegdbapi.Row_swiginit(self, _filegdbapi.new_Row())
    __swig_destroy__ = _filegdbapi.delete_Row

# Register Row in _filegdbapi:
_filegdbapi.Row_swigregister(Row)

class EnumRows(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def Next(self, row):
        return _filegdbapi.EnumRows_Next(self, row)

    def Close(self):
        return _filegdbapi.EnumRows_Close(self)

    def GetFieldInformation(self, fieldInfo):
        return _filegdbapi.EnumRows_GetFieldInformation(self, fieldInfo)

    def GetFields(self, fieldDefs):
        return _filegdbapi.EnumRows_GetFields(self, fieldDefs)

    def __init__(self):
        _filegdbapi.EnumRows_swiginit(self, _filegdbapi.new_EnumRows())
    __swig_destroy__ = _filegdbapi.delete_EnumRows

# Register EnumRows in _filegdbapi:
_filegdbapi.EnumRows_swigregister(EnumRows)

class SpatialReference(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _filegdbapi.SpatialReference_swiginit(self, _filegdbapi.new_SpatialReference())
    __swig_destroy__ = _filegdbapi.delete_SpatialReference

    def GetSpatialReferenceText(self, spatialReference):
        return _filegdbapi.SpatialReference_GetSpatialReferenceText(self, spatialReference)

    def SetSpatialReferenceText(self, spatialReference):
        return _filegdbapi.SpatialReference_SetSpatialReferenceText(self, spatialReference)

    def GetSpatialReferenceID(self, srid):
        return _filegdbapi.SpatialReference_GetSpatialReferenceID(self, srid)

    def SetSpatialReferenceID(self, srid):
        return _filegdbapi.SpatialReference_SetSpatialReferenceID(self, srid)

    def GetXYFalseOrigin(self, falseX, falseY):
        return _filegdbapi.SpatialReference_GetXYFalseOrigin(self, falseX, falseY)

    def SetXYFalseOrigin(self, falseX, falseY):
        return _filegdbapi.SpatialReference_SetXYFalseOrigin(self, falseX, falseY)

    def GetXYResolution(self, xyResolution):
        return _filegdbapi.SpatialReference_GetXYResolution(self, xyResolution)

    def SetXYResolution(self, xyResolution):
        return _filegdbapi.SpatialReference_SetXYResolution(self, xyResolution)

    def GetXYTolerance(self, xyTolerance):
        return _filegdbapi.SpatialReference_GetXYTolerance(self, xyTolerance)

    def SetXYTolerance(self, xyTolerance):
        return _filegdbapi.SpatialReference_SetXYTolerance(self, xyTolerance)

    def GetZFalseOrigin(self, falseZ):
        return _filegdbapi.SpatialReference_GetZFalseOrigin(self, falseZ)

    def SetZFalseOrigin(self, falseZ):
        return _filegdbapi.SpatialReference_SetZFalseOrigin(self, falseZ)

    def GetZResolution(self, zResolution):
        return _filegdbapi.SpatialReference_GetZResolution(self, zResolution)

    def SetZResolution(self, zResolution):
        return _filegdbapi.SpatialReference_SetZResolution(self, zResolution)

    def GetZTolerance(self, zTolerance):
        return _filegdbapi.SpatialReference_GetZTolerance(self, zTolerance)

    def SetZTolerance(self, zTolerance):
        return _filegdbapi.SpatialReference_SetZTolerance(self, zTolerance)

    def GetMFalseOrigin(self, falseM):
        return _filegdbapi.SpatialReference_GetMFalseOrigin(self, falseM)

    def SetMFalseOrigin(self, falseM):
        return _filegdbapi.SpatialReference_SetMFalseOrigin(self, falseM)

    def GetMResolution(self, mResolution):
        return _filegdbapi.SpatialReference_GetMResolution(self, mResolution)

    def SetMResolution(self, mResolution):
        return _filegdbapi.SpatialReference_SetMResolution(self, mResolution)

    def GetMTolerance(self, mTolerance):
        return _filegdbapi.SpatialReference_GetMTolerance(self, mTolerance)

    def SetMTolerance(self, mTolerance):
        return _filegdbapi.SpatialReference_SetMTolerance(self, mTolerance)

# Register SpatialReference in _filegdbapi:
_filegdbapi.SpatialReference_swigregister(SpatialReference)

class GeometryDef(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _filegdbapi.GeometryDef_swiginit(self, _filegdbapi.new_GeometryDef())
    __swig_destroy__ = _filegdbapi.delete_GeometryDef

    def GetGeometryType(self, geometryType):
        return _filegdbapi.GeometryDef_GetGeometryType(self, geometryType)

    def SetGeometryType(self, geometryType):
        return _filegdbapi.GeometryDef_SetGeometryType(self, geometryType)

    def GetHasZ(self, hasZ):
        return _filegdbapi.GeometryDef_GetHasZ(self, hasZ)

    def SetHasZ(self, hasZ):
        return _filegdbapi.GeometryDef_SetHasZ(self, hasZ)

    def GetHasM(self, hasM):
        return _filegdbapi.GeometryDef_GetHasM(self, hasM)

    def SetHasM(self, hasM):
        return _filegdbapi.GeometryDef_SetHasM(self, hasM)

    def GetSpatialReference(self, spatialReference):
        return _filegdbapi.GeometryDef_GetSpatialReference(self, spatialReference)

    def SetSpatialReference(self, spatialReference):
        return _filegdbapi.GeometryDef_SetSpatialReference(self, spatialReference)

# Register GeometryDef in _filegdbapi:
_filegdbapi.GeometryDef_swigregister(GeometryDef)

class FieldDef(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _filegdbapi.FieldDef_swiginit(self, _filegdbapi.new_FieldDef())
    __swig_destroy__ = _filegdbapi.delete_FieldDef

    def GetName(self, name):
        return _filegdbapi.FieldDef_GetName(self, name)

    def SetName(self, name):
        return _filegdbapi.FieldDef_SetName(self, name)

    def GetAlias(self, alias):
        return _filegdbapi.FieldDef_GetAlias(self, alias)

    def SetAlias(self, alias):
        return _filegdbapi.FieldDef_SetAlias(self, alias)

    def GetType(self, type):
        return _filegdbapi.FieldDef_GetType(self, type)

    def SetType(self, type):
        return _filegdbapi.FieldDef_SetType(self, type)

    def GetLength(self, length):
        return _filegdbapi.FieldDef_GetLength(self, length)

    def SetLength(self, length):
        return _filegdbapi.FieldDef_SetLength(self, length)

    def GetIsNullable(self, isNullable):
        return _filegdbapi.FieldDef_GetIsNullable(self, isNullable)

    def SetIsNullable(self, isNullable):
        return _filegdbapi.FieldDef_SetIsNullable(self, isNullable)

    def GetGeometryDef(self, geometryDef):
        return _filegdbapi.FieldDef_GetGeometryDef(self, geometryDef)

    def SetGeometryDef(self, geometryDef):
        return _filegdbapi.FieldDef_SetGeometryDef(self, geometryDef)

# Register FieldDef in _filegdbapi:
_filegdbapi.FieldDef_swigregister(FieldDef)

class IndexDef(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _filegdbapi.IndexDef_swiginit(self, _filegdbapi.new_IndexDef(*args))
    __swig_destroy__ = _filegdbapi.delete_IndexDef

    def GetName(self, name):
        return _filegdbapi.IndexDef_GetName(self, name)

    def SetName(self, name):
        return _filegdbapi.IndexDef_SetName(self, name)

    def GetFields(self, fields):
        return _filegdbapi.IndexDef_GetFields(self, fields)

    def SetFields(self, fields):
        return _filegdbapi.IndexDef_SetFields(self, fields)

    def GetIsUnique(self, isUnique):
        return _filegdbapi.IndexDef_GetIsUnique(self, isUnique)

    def SetIsUnique(self, isUnique):
        return _filegdbapi.IndexDef_SetIsUnique(self, isUnique)

# Register IndexDef in _filegdbapi:
_filegdbapi.IndexDef_swigregister(IndexDef)

class FieldInfo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def GetFieldCount(self, fieldCount):
        return _filegdbapi.FieldInfo_GetFieldCount(self, fieldCount)

    def GetFieldName(self, fieldNumber, fieldName):
        return _filegdbapi.FieldInfo_GetFieldName(self, fieldNumber, fieldName)

    def GetFieldType(self, fieldNumber, fieldType):
        return _filegdbapi.FieldInfo_GetFieldType(self, fieldNumber, fieldType)

    def GetFieldLength(self, fieldNumber, fieldLength):
        return _filegdbapi.FieldInfo_GetFieldLength(self, fieldNumber, fieldLength)

    def GetFieldIsNullable(self, fieldNumber, isNullable):
        return _filegdbapi.FieldInfo_GetFieldIsNullable(self, fieldNumber, isNullable)

    def __init__(self):
        _filegdbapi.FieldInfo_swiginit(self, _filegdbapi.new_FieldInfo())
    __swig_destroy__ = _filegdbapi.delete_FieldInfo

# Register FieldInfo in _filegdbapi:
_filegdbapi.FieldInfo_swigregister(FieldInfo)

class ShapeBuffer(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def Allocate(self, length):
        return _filegdbapi.ShapeBuffer_Allocate(self, length)

    def __init__(self, length=0):
        _filegdbapi.ShapeBuffer_swiginit(self, _filegdbapi.new_ShapeBuffer(length))
    __swig_destroy__ = _filegdbapi.delete_ShapeBuffer
    shapeBuffer = property(_filegdbapi.ShapeBuffer_shapeBuffer_get, _filegdbapi.ShapeBuffer_shapeBuffer_set)
    allocatedLength = property(_filegdbapi.ShapeBuffer_allocatedLength_get, _filegdbapi.ShapeBuffer_allocatedLength_set)
    inUseLength = property(_filegdbapi.ShapeBuffer_inUseLength_get, _filegdbapi.ShapeBuffer_inUseLength_set)

    def IsEmpty(self):
        return _filegdbapi.ShapeBuffer_IsEmpty(self)

    def SetEmpty(self):
        return _filegdbapi.ShapeBuffer_SetEmpty(self)

    def GetShapeType(self, shapeType):
        return _filegdbapi.ShapeBuffer_GetShapeType(self, shapeType)

    @staticmethod
    def HasZs(shapeType):
        return _filegdbapi.ShapeBuffer_HasZs(shapeType)

    @staticmethod
    def HasMs(shapeType):
        return _filegdbapi.ShapeBuffer_HasMs(shapeType)

    @staticmethod
    def HasIDs(shapeType):
        return _filegdbapi.ShapeBuffer_HasIDs(shapeType)

    @staticmethod
    def HasCurves(shapeType):
        return _filegdbapi.ShapeBuffer_HasCurves(shapeType)

    @staticmethod
    def HasNormals(shapeType):
        return _filegdbapi.ShapeBuffer_HasNormals(shapeType)

    @staticmethod
    def HasTextures(shapeType):
        return _filegdbapi.ShapeBuffer_HasTextures(shapeType)

    @staticmethod
    def HasMaterials(shapeType):
        return _filegdbapi.ShapeBuffer_HasMaterials(shapeType)

    @staticmethod
    def GetGeometryType(*args):
        return _filegdbapi.ShapeBuffer_GetGeometryType(*args)

# Register ShapeBuffer in _filegdbapi:
_filegdbapi.ShapeBuffer_swigregister(ShapeBuffer)

def ShapeBuffer_HasZs(shapeType):
    return _filegdbapi.ShapeBuffer_HasZs(shapeType)

def ShapeBuffer_HasMs(shapeType):
    return _filegdbapi.ShapeBuffer_HasMs(shapeType)

def ShapeBuffer_HasIDs(shapeType):
    return _filegdbapi.ShapeBuffer_HasIDs(shapeType)

def ShapeBuffer_HasCurves(shapeType):
    return _filegdbapi.ShapeBuffer_HasCurves(shapeType)

def ShapeBuffer_HasNormals(shapeType):
    return _filegdbapi.ShapeBuffer_HasNormals(shapeType)

def ShapeBuffer_HasTextures(shapeType):
    return _filegdbapi.ShapeBuffer_HasTextures(shapeType)

def ShapeBuffer_HasMaterials(shapeType):
    return _filegdbapi.ShapeBuffer_HasMaterials(shapeType)

def ShapeBuffer_GetGeometryType(*args):
    return _filegdbapi.ShapeBuffer_GetGeometryType(*args)

class PointShapeBuffer(ShapeBuffer):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def GetPoint(self, point):
        return _filegdbapi.PointShapeBuffer_GetPoint(self, point)

    def GetZ(self, z):
        return _filegdbapi.PointShapeBuffer_GetZ(self, z)

    def GetM(self, m):
        return _filegdbapi.PointShapeBuffer_GetM(self, m)

    def GetID(self, id):
        return _filegdbapi.PointShapeBuffer_GetID(self, id)

    def Setup(self, shapeType):
        return _filegdbapi.PointShapeBuffer_Setup(self, shapeType)

    def __init__(self):
        _filegdbapi.PointShapeBuffer_swiginit(self, _filegdbapi.new_PointShapeBuffer())
    __swig_destroy__ = _filegdbapi.delete_PointShapeBuffer

# Register PointShapeBuffer in _filegdbapi:
_filegdbapi.PointShapeBuffer_swigregister(PointShapeBuffer)

class MultiPointShapeBuffer(ShapeBuffer):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def GetExtent(self, extent):
        return _filegdbapi.MultiPointShapeBuffer_GetExtent(self, extent)

    def GetNumPoints(self, numPoints):
        return _filegdbapi.MultiPointShapeBuffer_GetNumPoints(self, numPoints)

    def GetPoints(self, points):
        return _filegdbapi.MultiPointShapeBuffer_GetPoints(self, points)

    def GetZExtent(self, zExtent):
        return _filegdbapi.MultiPointShapeBuffer_GetZExtent(self, zExtent)

    def GetZs(self, zArray):
        return _filegdbapi.MultiPointShapeBuffer_GetZs(self, zArray)

    def GetMExtent(self, mExtent):
        return _filegdbapi.MultiPointShapeBuffer_GetMExtent(self, mExtent)

    def GetMs(self, mArray):
        return _filegdbapi.MultiPointShapeBuffer_GetMs(self, mArray)

    def GetIDs(self, ids):
        return _filegdbapi.MultiPointShapeBuffer_GetIDs(self, ids)

    def Setup(self, shapeType, numPoints):
        return _filegdbapi.MultiPointShapeBuffer_Setup(self, shapeType, numPoints)

    def CalculateExtent(self):
        return _filegdbapi.MultiPointShapeBuffer_CalculateExtent(self)

    def __init__(self):
        _filegdbapi.MultiPointShapeBuffer_swiginit(self, _filegdbapi.new_MultiPointShapeBuffer())
    __swig_destroy__ = _filegdbapi.delete_MultiPointShapeBuffer

# Register MultiPointShapeBuffer in _filegdbapi:
_filegdbapi.MultiPointShapeBuffer_swigregister(MultiPointShapeBuffer)

class MultiPartShapeBuffer(ShapeBuffer):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def GetExtent(self, extent):
        return _filegdbapi.MultiPartShapeBuffer_GetExtent(self, extent)

    def GetNumParts(self, numParts):
        return _filegdbapi.MultiPartShapeBuffer_GetNumParts(self, numParts)

    def GetNumPoints(self, numPoints):
        return _filegdbapi.MultiPartShapeBuffer_GetNumPoints(self, numPoints)

    def GetParts(self, parts):
        return _filegdbapi.MultiPartShapeBuffer_GetParts(self, parts)

    def GetPoints(self, points):
        return _filegdbapi.MultiPartShapeBuffer_GetPoints(self, points)

    def GetZExtent(self, zExtent):
        return _filegdbapi.MultiPartShapeBuffer_GetZExtent(self, zExtent)

    def GetZs(self, zArray):
        return _filegdbapi.MultiPartShapeBuffer_GetZs(self, zArray)

    def GetMExtent(self, mExtent):
        return _filegdbapi.MultiPartShapeBuffer_GetMExtent(self, mExtent)

    def GetMs(self, mArray):
        return _filegdbapi.MultiPartShapeBuffer_GetMs(self, mArray)

    def GetNumCurves(self, numCurves):
        return _filegdbapi.MultiPartShapeBuffer_GetNumCurves(self, numCurves)

    def GetCurves(self, curves):
        return _filegdbapi.MultiPartShapeBuffer_GetCurves(self, curves)

    def GetIDs(self, ids):
        return _filegdbapi.MultiPartShapeBuffer_GetIDs(self, ids)

    def Setup(self, shapeType, numParts, numPoints, numCurves=0):
        return _filegdbapi.MultiPartShapeBuffer_Setup(self, shapeType, numParts, numPoints, numCurves)

    def CalculateExtent(self):
        return _filegdbapi.MultiPartShapeBuffer_CalculateExtent(self)

    def PackCurves(self):
        return _filegdbapi.MultiPartShapeBuffer_PackCurves(self)

    def __init__(self):
        _filegdbapi.MultiPartShapeBuffer_swiginit(self, _filegdbapi.new_MultiPartShapeBuffer())
    __swig_destroy__ = _filegdbapi.delete_MultiPartShapeBuffer

# Register MultiPartShapeBuffer in _filegdbapi:
_filegdbapi.MultiPartShapeBuffer_swigregister(MultiPartShapeBuffer)

class MultiPatchShapeBuffer(ShapeBuffer):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def GetExtent(self, extent):
        return _filegdbapi.MultiPatchShapeBuffer_GetExtent(self, extent)

    def GetNumParts(self, numParts):
        return _filegdbapi.MultiPatchShapeBuffer_GetNumParts(self, numParts)

    def GetNumPoints(self, numPoints):
        return _filegdbapi.MultiPatchShapeBuffer_GetNumPoints(self, numPoints)

    def GetParts(self, parts):
        return _filegdbapi.MultiPatchShapeBuffer_GetParts(self, parts)

    def GetPartDescriptors(self, partDescriptorArray):
        return _filegdbapi.MultiPatchShapeBuffer_GetPartDescriptors(self, partDescriptorArray)

    def GetPoints(self, points):
        return _filegdbapi.MultiPatchShapeBuffer_GetPoints(self, points)

    def GetZExtent(self, zExtent):
        return _filegdbapi.MultiPatchShapeBuffer_GetZExtent(self, zExtent)

    def GetZs(self, zArray):
        return _filegdbapi.MultiPatchShapeBuffer_GetZs(self, zArray)

    def GetMExtent(self, mExtent):
        return _filegdbapi.MultiPatchShapeBuffer_GetMExtent(self, mExtent)

    def GetMs(self, mArray):
        return _filegdbapi.MultiPatchShapeBuffer_GetMs(self, mArray)

    def GetIDs(self, ids):
        return _filegdbapi.MultiPatchShapeBuffer_GetIDs(self, ids)

    def GetNormals(self, normals):
        return _filegdbapi.MultiPatchShapeBuffer_GetNormals(self, normals)

    def GetTextures(self, numTextures, textureDimension, textureParts, textureCoords):
        return _filegdbapi.MultiPatchShapeBuffer_GetTextures(self, numTextures, textureDimension, textureParts, textureCoords)

    def GetMaterials(self, numMaterials, compressionType, materialParts, materials):
        return _filegdbapi.MultiPatchShapeBuffer_GetMaterials(self, numMaterials, compressionType, materialParts, materials)

    def Setup(self, shapeType, numParts, numPoints, numTextures=0, textureDimension=0, numMaterials=0, materialsLength=0):
        return _filegdbapi.MultiPatchShapeBuffer_Setup(self, shapeType, numParts, numPoints, numTextures, textureDimension, numMaterials, materialsLength)

    def CalculateExtent(self):
        return _filegdbapi.MultiPatchShapeBuffer_CalculateExtent(self)

    def __init__(self):
        _filegdbapi.MultiPatchShapeBuffer_swiginit(self, _filegdbapi.new_MultiPatchShapeBuffer())
    __swig_destroy__ = _filegdbapi.delete_MultiPatchShapeBuffer

# Register MultiPatchShapeBuffer in _filegdbapi:
_filegdbapi.MultiPatchShapeBuffer_swigregister(MultiPatchShapeBuffer)

class ByteArray(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def Allocate(self, length):
        return _filegdbapi.ByteArray_Allocate(self, length)

    def __init__(self, length=0):
        _filegdbapi.ByteArray_swiginit(self, _filegdbapi.new_ByteArray(length))
    __swig_destroy__ = _filegdbapi.delete_ByteArray
    byteArray = property(_filegdbapi.ByteArray_byteArray_get, _filegdbapi.ByteArray_byteArray_set)
    allocatedLength = property(_filegdbapi.ByteArray_allocatedLength_get, _filegdbapi.ByteArray_allocatedLength_set)
    inUseLength = property(_filegdbapi.ByteArray_inUseLength_get, _filegdbapi.ByteArray_inUseLength_set)

# Register ByteArray in _filegdbapi:
_filegdbapi.ByteArray_swigregister(ByteArray)

class Envelope(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def IsEmpty(self):
        return _filegdbapi.Envelope_IsEmpty(self)

    def SetEmpty(self):
        return _filegdbapi.Envelope_SetEmpty(self)

    def __init__(self, *args):
        _filegdbapi.Envelope_swiginit(self, _filegdbapi.new_Envelope(*args))
    __swig_destroy__ = _filegdbapi.delete_Envelope
    xMin = property(_filegdbapi.Envelope_xMin_get, _filegdbapi.Envelope_xMin_set)
    yMin = property(_filegdbapi.Envelope_yMin_get, _filegdbapi.Envelope_yMin_set)
    xMax = property(_filegdbapi.Envelope_xMax_get, _filegdbapi.Envelope_xMax_set)
    yMax = property(_filegdbapi.Envelope_yMax_get, _filegdbapi.Envelope_yMax_set)
    zMin = property(_filegdbapi.Envelope_zMin_get, _filegdbapi.Envelope_zMin_set)
    zMax = property(_filegdbapi.Envelope_zMax_get, _filegdbapi.Envelope_zMax_set)

# Register Envelope in _filegdbapi:
_filegdbapi.Envelope_swigregister(Envelope)

class Point(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    x = property(_filegdbapi.Point_x_get, _filegdbapi.Point_x_set)
    y = property(_filegdbapi.Point_y_get, _filegdbapi.Point_y_set)

    def __init__(self):
        _filegdbapi.Point_swiginit(self, _filegdbapi.new_Point())
    __swig_destroy__ = _filegdbapi.delete_Point

# Register Point in _filegdbapi:
_filegdbapi.Point_swigregister(Point)

class Curve(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _filegdbapi.delete_Curve
    startPointIndex = property(_filegdbapi.Curve_startPointIndex_get, _filegdbapi.Curve_startPointIndex_set)
    curveType = property(_filegdbapi.Curve_curveType_get, _filegdbapi.Curve_curveType_set)

    def GetCurveType(self, curvetype):
        return _filegdbapi.Curve_GetCurveType(self, curvetype)

# Register Curve in _filegdbapi:
_filegdbapi.Curve_swigregister(Curve)

class CircularArcCurve(Curve):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    bits = property(_filegdbapi.CircularArcCurve_bits_get, _filegdbapi.CircularArcCurve_bits_set)
    __swig_destroy__ = _filegdbapi.delete_CircularArcCurve

# Register CircularArcCurve in _filegdbapi:
_filegdbapi.CircularArcCurve_swigregister(CircularArcCurve)

class BezierCurve(Curve):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    controlPoints = property(_filegdbapi.BezierCurve_controlPoints_get, _filegdbapi.BezierCurve_controlPoints_set)
    __swig_destroy__ = _filegdbapi.delete_BezierCurve

# Register BezierCurve in _filegdbapi:
_filegdbapi.BezierCurve_swigregister(BezierCurve)

class EllipticArcCurve(Curve):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    semiMajor = property(_filegdbapi.EllipticArcCurve_semiMajor_get, _filegdbapi.EllipticArcCurve_semiMajor_set)
    bits = property(_filegdbapi.EllipticArcCurve_bits_get, _filegdbapi.EllipticArcCurve_bits_set)
    __swig_destroy__ = _filegdbapi.delete_EllipticArcCurve

# Register EllipticArcCurve in _filegdbapi:
_filegdbapi.EllipticArcCurve_swigregister(EllipticArcCurve)

class Guid(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _filegdbapi.Guid_swiginit(self, _filegdbapi.new_Guid())
    __swig_destroy__ = _filegdbapi.delete_Guid

    def SetNull(self):
        return _filegdbapi.Guid_SetNull(self)

    def Create(self):
        return _filegdbapi.Guid_Create(self)

    def FromString(self, guidString):
        return _filegdbapi.Guid_FromString(self, guidString)

    def ToString(self, guidString):
        return _filegdbapi.Guid_ToString(self, guidString)

    def __eq__(self, other):
        return _filegdbapi.Guid___eq__(self, other)

    def __ne__(self, other):
        return _filegdbapi.Guid___ne__(self, other)
    data1 = property(_filegdbapi.Guid_data1_get, _filegdbapi.Guid_data1_set)
    data2 = property(_filegdbapi.Guid_data2_get, _filegdbapi.Guid_data2_set)
    data3 = property(_filegdbapi.Guid_data3_get, _filegdbapi.Guid_data3_set)
    data4 = property(_filegdbapi.Guid_data4_get, _filegdbapi.Guid_data4_set)

# Register Guid in _filegdbapi:
_filegdbapi.Guid_swigregister(Guid)


def GetErrorDescription(fgdbError, errorDescription):
    return _filegdbapi.GetErrorDescription(fgdbError, errorDescription)

def GetErrorRecordCount(recordCount):
    return _filegdbapi.GetErrorRecordCount(recordCount)

def GetErrorRecord(recordNum, fgdbError, errorDescription):
    return _filegdbapi.GetErrorRecord(recordNum, fgdbError, errorDescription)

def ClearErrors():
    return _filegdbapi.ClearErrors()
class SpatialReferenceInfo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    auth_name = property(_filegdbapi.SpatialReferenceInfo_auth_name_get, _filegdbapi.SpatialReferenceInfo_auth_name_set)
    auth_srid = property(_filegdbapi.SpatialReferenceInfo_auth_srid_get, _filegdbapi.SpatialReferenceInfo_auth_srid_set)
    srtext = property(_filegdbapi.SpatialReferenceInfo_srtext_get, _filegdbapi.SpatialReferenceInfo_srtext_set)
    srname = property(_filegdbapi.SpatialReferenceInfo_srname_get, _filegdbapi.SpatialReferenceInfo_srname_set)

    def __init__(self):
        _filegdbapi.SpatialReferenceInfo_swiginit(self, _filegdbapi.new_SpatialReferenceInfo())
    __swig_destroy__ = _filegdbapi.delete_SpatialReferenceInfo

# Register SpatialReferenceInfo in _filegdbapi:
_filegdbapi.SpatialReferenceInfo_swigregister(SpatialReferenceInfo)

class EnumSpatialReferenceInfo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _filegdbapi.EnumSpatialReferenceInfo_swiginit(self, _filegdbapi.new_EnumSpatialReferenceInfo())
    __swig_destroy__ = _filegdbapi.delete_EnumSpatialReferenceInfo

    def NextGeographicSpatialReference(self, spatialReferenceInfo):
        return _filegdbapi.EnumSpatialReferenceInfo_NextGeographicSpatialReference(self, spatialReferenceInfo)

    def NextProjectedSpatialReference(self, spatialReferenceInfo):
        return _filegdbapi.EnumSpatialReferenceInfo_NextProjectedSpatialReference(self, spatialReferenceInfo)

    def Reset(self):
        return _filegdbapi.EnumSpatialReferenceInfo_Reset(self)

# Register EnumSpatialReferenceInfo in _filegdbapi:
_filegdbapi.EnumSpatialReferenceInfo_swigregister(EnumSpatialReferenceInfo)


def FindSpatialReferenceBySRID(auth_srid, spatialRef):
    return _filegdbapi.FindSpatialReferenceBySRID(auth_srid, spatialRef)

def FindSpatialReferenceByName(srname, spatialRef):
    return _filegdbapi.FindSpatialReferenceByName(srname, spatialRef)
class Raster(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _filegdbapi.Raster_swiginit(self, _filegdbapi.new_Raster())
    __swig_destroy__ = _filegdbapi.delete_Raster

# Register Raster in _filegdbapi:
_filegdbapi.Raster_swigregister(Raster)


def utc_string_to_dt(sTime):
    return _filegdbapi.utc_string_to_dt(sTime)

def GetDate_string(*args):
    return _filegdbapi.GetDate_string(*args)

def SetDate_string(*args):
    return _filegdbapi.SetDate_string(*args)

def GetPoints(multiPartShapeBuffer, points):
    return _filegdbapi.GetPoints(multiPartShapeBuffer, points)

def GetPointsRef(multiPartShapeBuffer):
    return _filegdbapi.GetPointsRef(multiPartShapeBuffer)

def GetZsRef(multiPartShapeBuffer):
    return _filegdbapi.GetZsRef(multiPartShapeBuffer)

def GetMsRef(multiPartShapeBuffer):
    return _filegdbapi.GetMsRef(multiPartShapeBuffer)

def GetParts(multiPartShapeBuffer, parts):
    return _filegdbapi.GetParts(multiPartShapeBuffer, parts)

def GetPartsRef(multiPartShapeBuffer):
    return _filegdbapi.GetPartsRef(multiPartShapeBuffer)

def SetPoint(*args):
    return _filegdbapi.SetPoint(*args)

def SetMultiPartShapeBuffer(multiPartShapeBuffer, points, numPts, parts, numParts, Zs=None, Ms=None):
    return _filegdbapi.SetMultiPartShapeBuffer(multiPartShapeBuffer, points, numPts, parts, numParts, Zs, Ms)

def SetMultiPoint(multipointShapeBuffer, points, numPts, Zs=None, Ms=None):
    return _filegdbapi.SetMultiPoint(multipointShapeBuffer, points, numPts, Zs, Ms)

def SetPolyline(multiPartShapeBuffer, points, numPts, parts, numParts, Zs=None, Ms=None):
    return _filegdbapi.SetPolyline(multiPartShapeBuffer, points, numPts, parts, numParts, Zs, Ms)

def SetPolygon(multiPartShapeBuffer, points, numPts, parts, numParts, Zs=None, Ms=None):
    return _filegdbapi.SetPolygon(multiPartShapeBuffer, points, numPts, parts, numParts, Zs, Ms)
class fieldDefs(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        return _filegdbapi.fieldDefs_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _filegdbapi.fieldDefs___nonzero__(self)

    def __bool__(self):
        return _filegdbapi.fieldDefs___bool__(self)

    def __len__(self):
        return _filegdbapi.fieldDefs___len__(self)

    def __getslice__(self, i, j):
        return _filegdbapi.fieldDefs___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _filegdbapi.fieldDefs___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _filegdbapi.fieldDefs___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _filegdbapi.fieldDefs___delitem__(self, *args)

    def __getitem__(self, *args):
        return _filegdbapi.fieldDefs___getitem__(self, *args)

    def __setitem__(self, *args):
        return _filegdbapi.fieldDefs___setitem__(self, *args)

    def pop(self):
        return _filegdbapi.fieldDefs_pop(self)

    def append(self, x):
        return _filegdbapi.fieldDefs_append(self, x)

    def empty(self):
        return _filegdbapi.fieldDefs_empty(self)

    def size(self):
        return _filegdbapi.fieldDefs_size(self)

    def swap(self, v):
        return _filegdbapi.fieldDefs_swap(self, v)

    def begin(self):
        return _filegdbapi.fieldDefs_begin(self)

    def end(self):
        return _filegdbapi.fieldDefs_end(self)

    def rbegin(self):
        return _filegdbapi.fieldDefs_rbegin(self)

    def rend(self):
        return _filegdbapi.fieldDefs_rend(self)

    def clear(self):
        return _filegdbapi.fieldDefs_clear(self)

    def get_allocator(self):
        return _filegdbapi.fieldDefs_get_allocator(self)

    def pop_back(self):
        return _filegdbapi.fieldDefs_pop_back(self)

    def erase(self, *args):
        return _filegdbapi.fieldDefs_erase(self, *args)

    def __init__(self, *args):
        _filegdbapi.fieldDefs_swiginit(self, _filegdbapi.new_fieldDefs(*args))

    def push_back(self, x):
        return _filegdbapi.fieldDefs_push_back(self, x)

    def front(self):
        return _filegdbapi.fieldDefs_front(self)

    def back(self):
        return _filegdbapi.fieldDefs_back(self)

    def assign(self, n, x):
        return _filegdbapi.fieldDefs_assign(self, n, x)

    def resize(self, *args):
        return _filegdbapi.fieldDefs_resize(self, *args)

    def insert(self, *args):
        return _filegdbapi.fieldDefs_insert(self, *args)

    def reserve(self, n):
        return _filegdbapi.fieldDefs_reserve(self, n)

    def capacity(self):
        return _filegdbapi.fieldDefs_capacity(self)
    __swig_destroy__ = _filegdbapi.delete_fieldDefs

# Register fieldDefs in _filegdbapi:
_filegdbapi.fieldDefs_swigregister(fieldDefs)
cvar = _filegdbapi.cvar

class points(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        return _filegdbapi.points_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _filegdbapi.points___nonzero__(self)

    def __bool__(self):
        return _filegdbapi.points___bool__(self)

    def __len__(self):
        return _filegdbapi.points___len__(self)

    def __getslice__(self, i, j):
        return _filegdbapi.points___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _filegdbapi.points___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _filegdbapi.points___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _filegdbapi.points___delitem__(self, *args)

    def __getitem__(self, *args):
        return _filegdbapi.points___getitem__(self, *args)

    def __setitem__(self, *args):
        return _filegdbapi.points___setitem__(self, *args)

    def pop(self):
        return _filegdbapi.points_pop(self)

    def append(self, x):
        return _filegdbapi.points_append(self, x)

    def empty(self):
        return _filegdbapi.points_empty(self)

    def size(self):
        return _filegdbapi.points_size(self)

    def swap(self, v):
        return _filegdbapi.points_swap(self, v)

    def begin(self):
        return _filegdbapi.points_begin(self)

    def end(self):
        return _filegdbapi.points_end(self)

    def rbegin(self):
        return _filegdbapi.points_rbegin(self)

    def rend(self):
        return _filegdbapi.points_rend(self)

    def clear(self):
        return _filegdbapi.points_clear(self)

    def get_allocator(self):
        return _filegdbapi.points_get_allocator(self)

    def pop_back(self):
        return _filegdbapi.points_pop_back(self)

    def erase(self, *args):
        return _filegdbapi.points_erase(self, *args)

    def __init__(self, *args):
        _filegdbapi.points_swiginit(self, _filegdbapi.new_points(*args))

    def push_back(self, x):
        return _filegdbapi.points_push_back(self, x)

    def front(self):
        return _filegdbapi.points_front(self)

    def back(self):
        return _filegdbapi.points_back(self)

    def assign(self, n, x):
        return _filegdbapi.points_assign(self, n, x)

    def resize(self, *args):
        return _filegdbapi.points_resize(self, *args)

    def insert(self, *args):
        return _filegdbapi.points_insert(self, *args)

    def reserve(self, n):
        return _filegdbapi.points_reserve(self, n)

    def capacity(self):
        return _filegdbapi.points_capacity(self)
    __swig_destroy__ = _filegdbapi.delete_points

# Register points in _filegdbapi:
_filegdbapi.points_swigregister(points)

class wStringVector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        return _filegdbapi.wStringVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _filegdbapi.wStringVector___nonzero__(self)

    def __bool__(self):
        return _filegdbapi.wStringVector___bool__(self)

    def __len__(self):
        return _filegdbapi.wStringVector___len__(self)

    def __getslice__(self, i, j):
        return _filegdbapi.wStringVector___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _filegdbapi.wStringVector___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _filegdbapi.wStringVector___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _filegdbapi.wStringVector___delitem__(self, *args)

    def __getitem__(self, *args):
        return _filegdbapi.wStringVector___getitem__(self, *args)

    def __setitem__(self, *args):
        return _filegdbapi.wStringVector___setitem__(self, *args)

    def pop(self):
        return _filegdbapi.wStringVector_pop(self)

    def append(self, x):
        return _filegdbapi.wStringVector_append(self, x)

    def empty(self):
        return _filegdbapi.wStringVector_empty(self)

    def size(self):
        return _filegdbapi.wStringVector_size(self)

    def swap(self, v):
        return _filegdbapi.wStringVector_swap(self, v)

    def begin(self):
        return _filegdbapi.wStringVector_begin(self)

    def end(self):
        return _filegdbapi.wStringVector_end(self)

    def rbegin(self):
        return _filegdbapi.wStringVector_rbegin(self)

    def rend(self):
        return _filegdbapi.wStringVector_rend(self)

    def clear(self):
        return _filegdbapi.wStringVector_clear(self)

    def get_allocator(self):
        return _filegdbapi.wStringVector_get_allocator(self)

    def pop_back(self):
        return _filegdbapi.wStringVector_pop_back(self)

    def erase(self, *args):
        return _filegdbapi.wStringVector_erase(self, *args)

    def __init__(self, *args):
        _filegdbapi.wStringVector_swiginit(self, _filegdbapi.new_wStringVector(*args))

    def push_back(self, x):
        return _filegdbapi.wStringVector_push_back(self, x)

    def front(self):
        return _filegdbapi.wStringVector_front(self)

    def back(self):
        return _filegdbapi.wStringVector_back(self)

    def assign(self, n, x):
        return _filegdbapi.wStringVector_assign(self, n, x)

    def resize(self, *args):
        return _filegdbapi.wStringVector_resize(self, *args)

    def insert(self, *args):
        return _filegdbapi.wStringVector_insert(self, *args)

    def reserve(self, n):
        return _filegdbapi.wStringVector_reserve(self, n)

    def capacity(self):
        return _filegdbapi.wStringVector_capacity(self)
    __swig_destroy__ = _filegdbapi.delete_wStringVector

# Register wStringVector in _filegdbapi:
_filegdbapi.wStringVector_swigregister(wStringVector)

class stringVector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        return _filegdbapi.stringVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _filegdbapi.stringVector___nonzero__(self)

    def __bool__(self):
        return _filegdbapi.stringVector___bool__(self)

    def __len__(self):
        return _filegdbapi.stringVector___len__(self)

    def __getslice__(self, i, j):
        return _filegdbapi.stringVector___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _filegdbapi.stringVector___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _filegdbapi.stringVector___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _filegdbapi.stringVector___delitem__(self, *args)

    def __getitem__(self, *args):
        return _filegdbapi.stringVector___getitem__(self, *args)

    def __setitem__(self, *args):
        return _filegdbapi.stringVector___setitem__(self, *args)

    def pop(self):
        return _filegdbapi.stringVector_pop(self)

    def append(self, x):
        return _filegdbapi.stringVector_append(self, x)

    def empty(self):
        return _filegdbapi.stringVector_empty(self)

    def size(self):
        return _filegdbapi.stringVector_size(self)

    def swap(self, v):
        return _filegdbapi.stringVector_swap(self, v)

    def begin(self):
        return _filegdbapi.stringVector_begin(self)

    def end(self):
        return _filegdbapi.stringVector_end(self)

    def rbegin(self):
        return _filegdbapi.stringVector_rbegin(self)

    def rend(self):
        return _filegdbapi.stringVector_rend(self)

    def clear(self):
        return _filegdbapi.stringVector_clear(self)

    def get_allocator(self):
        return _filegdbapi.stringVector_get_allocator(self)

    def pop_back(self):
        return _filegdbapi.stringVector_pop_back(self)

    def erase(self, *args):
        return _filegdbapi.stringVector_erase(self, *args)

    def __init__(self, *args):
        _filegdbapi.stringVector_swiginit(self, _filegdbapi.new_stringVector(*args))

    def push_back(self, x):
        return _filegdbapi.stringVector_push_back(self, x)

    def front(self):
        return _filegdbapi.stringVector_front(self)

    def back(self):
        return _filegdbapi.stringVector_back(self)

    def assign(self, n, x):
        return _filegdbapi.stringVector_assign(self, n, x)

    def resize(self, *args):
        return _filegdbapi.stringVector_resize(self, *args)

    def insert(self, *args):
        return _filegdbapi.stringVector_insert(self, *args)

    def reserve(self, n):
        return _filegdbapi.stringVector_reserve(self, n)

    def capacity(self):
        return _filegdbapi.stringVector_capacity(self)
    __swig_destroy__ = _filegdbapi.delete_stringVector

# Register stringVector in _filegdbapi:
_filegdbapi.stringVector_swigregister(stringVector)

class intVector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        return _filegdbapi.intVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _filegdbapi.intVector___nonzero__(self)

    def __bool__(self):
        return _filegdbapi.intVector___bool__(self)

    def __len__(self):
        return _filegdbapi.intVector___len__(self)

    def __getslice__(self, i, j):
        return _filegdbapi.intVector___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _filegdbapi.intVector___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _filegdbapi.intVector___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _filegdbapi.intVector___delitem__(self, *args)

    def __getitem__(self, *args):
        return _filegdbapi.intVector___getitem__(self, *args)

    def __setitem__(self, *args):
        return _filegdbapi.intVector___setitem__(self, *args)

    def pop(self):
        return _filegdbapi.intVector_pop(self)

    def append(self, x):
        return _filegdbapi.intVector_append(self, x)

    def empty(self):
        return _filegdbapi.intVector_empty(self)

    def size(self):
        return _filegdbapi.intVector_size(self)

    def swap(self, v):
        return _filegdbapi.intVector_swap(self, v)

    def begin(self):
        return _filegdbapi.intVector_begin(self)

    def end(self):
        return _filegdbapi.intVector_end(self)

    def rbegin(self):
        return _filegdbapi.intVector_rbegin(self)

    def rend(self):
        return _filegdbapi.intVector_rend(self)

    def clear(self):
        return _filegdbapi.intVector_clear(self)

    def get_allocator(self):
        return _filegdbapi.intVector_get_allocator(self)

    def pop_back(self):
        return _filegdbapi.intVector_pop_back(self)

    def erase(self, *args):
        return _filegdbapi.intVector_erase(self, *args)

    def __init__(self, *args):
        _filegdbapi.intVector_swiginit(self, _filegdbapi.new_intVector(*args))

    def push_back(self, x):
        return _filegdbapi.intVector_push_back(self, x)

    def front(self):
        return _filegdbapi.intVector_front(self)

    def back(self):
        return _filegdbapi.intVector_back(self)

    def assign(self, n, x):
        return _filegdbapi.intVector_assign(self, n, x)

    def resize(self, *args):
        return _filegdbapi.intVector_resize(self, *args)

    def insert(self, *args):
        return _filegdbapi.intVector_insert(self, *args)

    def reserve(self, n):
        return _filegdbapi.intVector_reserve(self, n)

    def capacity(self):
        return _filegdbapi.intVector_capacity(self)
    __swig_destroy__ = _filegdbapi.delete_intVector

# Register intVector in _filegdbapi:
_filegdbapi.intVector_swigregister(intVector)


def new_fieldtypep():
    return _filegdbapi.new_fieldtypep()

def copy_fieldtypep(value):
    return _filegdbapi.copy_fieldtypep(value)

def delete_fieldtypep(obj):
    return _filegdbapi.delete_fieldtypep(obj)

def fieldtypep_assign(obj, value):
    return _filegdbapi.fieldtypep_assign(obj, value)

def fieldtypep_value(obj):
    return _filegdbapi.fieldtypep_value(obj)

def new_shapetypep():
    return _filegdbapi.new_shapetypep()

def copy_shapetypep(value):
    return _filegdbapi.copy_shapetypep(value)

def delete_shapetypep(obj):
    return _filegdbapi.delete_shapetypep(obj)

def shapetypep_assign(obj, value):
    return _filegdbapi.shapetypep_assign(obj, value)

def shapetypep_value(obj):
    return _filegdbapi.shapetypep_value(obj)
class intp(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _filegdbapi.intp_swiginit(self, _filegdbapi.new_intp())
    __swig_destroy__ = _filegdbapi.delete_intp

    def assign(self, value):
        return _filegdbapi.intp_assign(self, value)

    def value(self):
        return _filegdbapi.intp_value(self)

    def cast(self):
        return _filegdbapi.intp_cast(self)

    @staticmethod
    def frompointer(t):
        return _filegdbapi.intp_frompointer(t)

# Register intp in _filegdbapi:
_filegdbapi.intp_swigregister(intp)

def intp_frompointer(t):
    return _filegdbapi.intp_frompointer(t)

class shortp(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _filegdbapi.shortp_swiginit(self, _filegdbapi.new_shortp())
    __swig_destroy__ = _filegdbapi.delete_shortp

    def assign(self, value):
        return _filegdbapi.shortp_assign(self, value)

    def value(self):
        return _filegdbapi.shortp_value(self)

    def cast(self):
        return _filegdbapi.shortp_cast(self)

    @staticmethod
    def frompointer(t):
        return _filegdbapi.shortp_frompointer(t)

# Register shortp in _filegdbapi:
_filegdbapi.shortp_swigregister(shortp)

def shortp_frompointer(t):
    return _filegdbapi.shortp_frompointer(t)

class floatp(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _filegdbapi.floatp_swiginit(self, _filegdbapi.new_floatp())
    __swig_destroy__ = _filegdbapi.delete_floatp

    def assign(self, value):
        return _filegdbapi.floatp_assign(self, value)

    def value(self):
        return _filegdbapi.floatp_value(self)

    def cast(self):
        return _filegdbapi.floatp_cast(self)

    @staticmethod
    def frompointer(t):
        return _filegdbapi.floatp_frompointer(t)

# Register floatp in _filegdbapi:
_filegdbapi.floatp_swigregister(floatp)

def floatp_frompointer(t):
    return _filegdbapi.floatp_frompointer(t)

class doublep(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _filegdbapi.doublep_swiginit(self, _filegdbapi.new_doublep())
    __swig_destroy__ = _filegdbapi.delete_doublep

    def assign(self, value):
        return _filegdbapi.doublep_assign(self, value)

    def value(self):
        return _filegdbapi.doublep_value(self)

    def cast(self):
        return _filegdbapi.doublep_cast(self)

    @staticmethod
    def frompointer(t):
        return _filegdbapi.doublep_frompointer(t)

# Register doublep in _filegdbapi:
_filegdbapi.doublep_swigregister(doublep)

def doublep_frompointer(t):
    return _filegdbapi.doublep_frompointer(t)

class fieldDefsp(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _filegdbapi.fieldDefsp_swiginit(self, _filegdbapi.new_fieldDefsp())
    __swig_destroy__ = _filegdbapi.delete_fieldDefsp

    def assign(self, value):
        return _filegdbapi.fieldDefsp_assign(self, value)

    def value(self):
        return _filegdbapi.fieldDefsp_value(self)

    def cast(self):
        return _filegdbapi.fieldDefsp_cast(self)

    @staticmethod
    def frompointer(t):
        return _filegdbapi.fieldDefsp_frompointer(t)

# Register fieldDefsp in _filegdbapi:
_filegdbapi.fieldDefsp_swigregister(fieldDefsp)

def fieldDefsp_frompointer(t):
    return _filegdbapi.fieldDefsp_frompointer(t)

class wstringp(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _filegdbapi.wstringp_swiginit(self, _filegdbapi.new_wstringp())
    __swig_destroy__ = _filegdbapi.delete_wstringp

    def assign(self, value):
        return _filegdbapi.wstringp_assign(self, value)

    def value(self):
        return _filegdbapi.wstringp_value(self)

    def cast(self):
        return _filegdbapi.wstringp_cast(self)

    @staticmethod
    def frompointer(t):
        return _filegdbapi.wstringp_frompointer(t)

# Register wstringp in _filegdbapi:
_filegdbapi.wstringp_swigregister(wstringp)

def wstringp_frompointer(t):
    return _filegdbapi.wstringp_frompointer(t)

class stringp(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _filegdbapi.stringp_swiginit(self, _filegdbapi.new_stringp())
    __swig_destroy__ = _filegdbapi.delete_stringp

    def assign(self, value):
        return _filegdbapi.stringp_assign(self, value)

    def value(self):
        return _filegdbapi.stringp_value(self)

    def cast(self):
        return _filegdbapi.stringp_cast(self)

    @staticmethod
    def frompointer(t):
        return _filegdbapi.stringp_frompointer(t)

# Register stringp in _filegdbapi:
_filegdbapi.stringp_swigregister(stringp)

def stringp_frompointer(t):
    return _filegdbapi.stringp_frompointer(t)

class wstringsp(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _filegdbapi.wstringsp_swiginit(self, _filegdbapi.new_wstringsp())
    __swig_destroy__ = _filegdbapi.delete_wstringsp

    def assign(self, value):
        return _filegdbapi.wstringsp_assign(self, value)

    def value(self):
        return _filegdbapi.wstringsp_value(self)

    def cast(self):
        return _filegdbapi.wstringsp_cast(self)

    @staticmethod
    def frompointer(t):
        return _filegdbapi.wstringsp_frompointer(t)

# Register wstringsp in _filegdbapi:
_filegdbapi.wstringsp_swigregister(wstringsp)

def wstringsp_frompointer(t):
    return _filegdbapi.wstringsp_frompointer(t)

class stringsp(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _filegdbapi.stringsp_swiginit(self, _filegdbapi.new_stringsp())
    __swig_destroy__ = _filegdbapi.delete_stringsp

    def assign(self, value):
        return _filegdbapi.stringsp_assign(self, value)

    def value(self):
        return _filegdbapi.stringsp_value(self)

    def cast(self):
        return _filegdbapi.stringsp_cast(self)

    @staticmethod
    def frompointer(t):
        return _filegdbapi.stringsp_frompointer(t)

# Register stringsp in _filegdbapi:
_filegdbapi.stringsp_swigregister(stringsp)

def stringsp_frompointer(t):
    return _filegdbapi.stringsp_frompointer(t)

class pointp(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _filegdbapi.pointp_swiginit(self, _filegdbapi.new_pointp())
    __swig_destroy__ = _filegdbapi.delete_pointp

    def assign(self, value):
        return _filegdbapi.pointp_assign(self, value)

    def value(self):
        return _filegdbapi.pointp_value(self)

    def cast(self):
        return _filegdbapi.pointp_cast(self)

    @staticmethod
    def frompointer(t):
        return _filegdbapi.pointp_frompointer(t)

# Register pointp in _filegdbapi:
_filegdbapi.pointp_swigregister(pointp)

def pointp_frompointer(t):
    return _filegdbapi.pointp_frompointer(t)

class tmp(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _filegdbapi.tmp_swiginit(self, _filegdbapi.new_tmp())
    __swig_destroy__ = _filegdbapi.delete_tmp

    def assign(self, value):
        return _filegdbapi.tmp_assign(self, value)

    def value(self):
        return _filegdbapi.tmp_value(self)

    def cast(self):
        return _filegdbapi.tmp_cast(self)

    @staticmethod
    def frompointer(t):
        return _filegdbapi.tmp_frompointer(t)

# Register tmp in _filegdbapi:
_filegdbapi.tmp_swigregister(tmp)

def tmp_frompointer(t):
    return _filegdbapi.tmp_frompointer(t)

class pointsp(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _filegdbapi.pointsp_swiginit(self, _filegdbapi.new_pointsp())
    __swig_destroy__ = _filegdbapi.delete_pointsp

    def assign(self, value):
        return _filegdbapi.pointsp_assign(self, value)

    def value(self):
        return _filegdbapi.pointsp_value(self)

    def cast(self):
        return _filegdbapi.pointsp_cast(self)

    @staticmethod
    def frompointer(t):
        return _filegdbapi.pointsp_frompointer(t)

# Register pointsp in _filegdbapi:
_filegdbapi.pointsp_swigregister(pointsp)

def pointsp_frompointer(t):
    return _filegdbapi.pointsp_frompointer(t)

class intsp(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _filegdbapi.intsp_swiginit(self, _filegdbapi.new_intsp())
    __swig_destroy__ = _filegdbapi.delete_intsp

    def assign(self, value):
        return _filegdbapi.intsp_assign(self, value)

    def value(self):
        return _filegdbapi.intsp_value(self)

    def cast(self):
        return _filegdbapi.intsp_cast(self)

    @staticmethod
    def frompointer(t):
        return _filegdbapi.intsp_frompointer(t)

# Register intsp in _filegdbapi:
_filegdbapi.intsp_swigregister(intsp)

def intsp_frompointer(t):
    return _filegdbapi.intsp_frompointer(t)

class pointArray(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, nelements):
        _filegdbapi.pointArray_swiginit(self, _filegdbapi.new_pointArray(nelements))
    __swig_destroy__ = _filegdbapi.delete_pointArray

    def __getitem__(self, index):
        return _filegdbapi.pointArray___getitem__(self, index)

    def __setitem__(self, index, value):
        return _filegdbapi.pointArray___setitem__(self, index, value)

    def cast(self):
        return _filegdbapi.pointArray_cast(self)

    @staticmethod
    def frompointer(t):
        return _filegdbapi.pointArray_frompointer(t)

# Register pointArray in _filegdbapi:
_filegdbapi.pointArray_swigregister(pointArray)

def pointArray_frompointer(t):
    return _filegdbapi.pointArray_frompointer(t)

class doubleArray(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, nelements):
        _filegdbapi.doubleArray_swiginit(self, _filegdbapi.new_doubleArray(nelements))
    __swig_destroy__ = _filegdbapi.delete_doubleArray

    def __getitem__(self, index):
        return _filegdbapi.doubleArray___getitem__(self, index)

    def __setitem__(self, index, value):
        return _filegdbapi.doubleArray___setitem__(self, index, value)

    def cast(self):
        return _filegdbapi.doubleArray_cast(self)

    @staticmethod
    def frompointer(t):
        return _filegdbapi.doubleArray_frompointer(t)

# Register doubleArray in _filegdbapi:
_filegdbapi.doubleArray_swigregister(doubleArray)

def doubleArray_frompointer(t):
    return _filegdbapi.doubleArray_frompointer(t)

class intArray(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, nelements):
        _filegdbapi.intArray_swiginit(self, _filegdbapi.new_intArray(nelements))
    __swig_destroy__ = _filegdbapi.delete_intArray

    def __getitem__(self, index):
        return _filegdbapi.intArray___getitem__(self, index)

    def __setitem__(self, index, value):
        return _filegdbapi.intArray___setitem__(self, index, value)

    def cast(self):
        return _filegdbapi.intArray_cast(self)

    @staticmethod
    def frompointer(t):
        return _filegdbapi.intArray_frompointer(t)

# Register intArray in _filegdbapi:
_filegdbapi.intArray_swigregister(intArray)

def intArray_frompointer(t):
    return _filegdbapi.intArray_frompointer(t)


def foo(a, b):
    return _filegdbapi.foo(a, b)


